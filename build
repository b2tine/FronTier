#!/bin/bash

function parse_arguments
{   
    if [[ "$1" == "-h" || "$1" == "--h" ]]; then
        echo "$0    High-level build script for FronTier++."
        echo "Usage: $0 [-d] [-n] [-g] [--with-hdf]"
        echo
        echo "    -d          Enable debugging."
        echo "    -a          Advanced version"
        echo "    -b          Base version"
        echo "    -n          Just configure. Do not run make."
        echo "    --with-gpu  Enable compilation with GPU."
        echo "    --without-hypre  Not to enable compilation with HYPRE."
        echo "    --without-hdf  Not to enable compilation with HDF4."
        echo "    --without-gd   Not to enable compilation with graphics drawing for 1-D post processing."
        echo "    --enable-itaps  Enable compilation with ITAPS."
        echo "    --enable-imesh  Enable compilation with IMESH."
    	echo "    --with-***      Same parameter as old configure file."
        exit
    fi
    
    WITHHYPRE=1
    WITHHDF=1
    WITHGD=1

    OPTS="-Wformat-overflow=0"
    COPTS_GCC="-fopenmp -Wno-unused-result -Wformat-overflow=0"

    export BASECODE="no"

    for arg in $@ ; do
        if [[ "$arg" == "-d" ]]; then
            OPTS="-g -rdynamic ${OPTS}"
	        COPTS_GCC="-pedantic -Wno-long-long ${COPTS_GCC}"
	        COPTS_ICC="-Wall"
        elif [[ "$arg" == "-n" ]]; then
	        NOMAKE=1
        elif [[ "$arg" == "--enable-itaps" ]]; then
	        CONF="$CONF --enable-itaps"
        elif [[ "$arg" == "--enable-imesh" ]]; then
	        CONF="$CONF --enable-imesh"
        elif [[ "$arg" == "-a" ]]; then
	        export BASECODE="adv"
        elif [[ "$arg" == "-b" ]]; then
	        export BASECODE="base"
        elif [[ "$arg" == "--with-gpu" ]]; then
            WITHGPU=1
        elif [[ "$arg" == "-o2" ]]; then
	        OPTS="-O2 ${OPTS}"
        elif [[ "$arg" == "--without-hypre" ]]; then
            WITHHYPRE=0
        elif [[ "$arg" == "--without-hdf" ]]; then
            WITHHDF=0
        elif [[ "$arg" == "--without-gd" ]]; then
            WITHGD=0
        elif [[ "$arg" == "--with-gsl" ]]; then
            WITHGSL=1
        else
            CONF="$CONF ${arg}"
        fi
    done

}

function config_generic
{
    HASMPI=`which mpicxx`
    if [[ -n "$HASMPI" ]]; then
        export CXX="mpicxx ${OPTS}"
        export F77="mpif77 ${OPTS}"
        export CC="mpicc ${OPTS}"
    else
        export CXX="g++ ${OPTS}"
        export F77="gfortran ${OPTS}"
        export CC="gcc ${OPTS}"
    fi

    echo -n "Enter command for C compiler. (Hit RETURN to use default \"$CC\"): "
    read CC_
    if  [[ -n "$CC_" ]]; then export CC=$CC_; fi

    echo -n "Enter command for C++ compiler. (Hit RETURN to use default \"$CXX\"): "
    read CXX_
    if  [[ -n "$CXX2" ]]; then export CXX=$CXX_; fi

    echo -n "Enter command for F77 compiler. (Hit RETURN to use default \"$F77)\": "
    read F77_
    if  [[ -n "$F77_" ]]; then export F77=$F77_; fi

    if [[ ${CC:0:2} == "mp" ]] && [[ ${CXX:0:2} == "mp" ]] && [[ ${F77:0:2} == "mp" ]]; then
        CONF="$CONF --with-mpich=${HASMPI/\/bin\/mpicxx/}"
    fi

    if [[ -n "$WITHHDF" ]]; then
        echo -n "Enter root directory for HDF5. (Hit RETURN to skip HDF5.): "
        read HDF5_DIR
        if [[ -n "$HDF5_DIR" ]]; then
            CONF="$CONF --with-hdf=$HDF5_DIR"
        fi
    fi

    if [[ -n "$WITHGD" ]]; then
        echo -n "Enter root directory for GD. (Hit RETURN to skip GD.): "
        read GD_DIR
        if [[ -n "$GD_DIR" ]]; then
            CONF="$CONF --with-gd=$GD_DIR"
        fi
    fi

    echo -n "Enter root directory for PETSC. PETSc is required to compile iFluid. Note that PETSc requires MPI, and the MPI wrappers you specified for CC and CXX must be the same as those used to compile PETSc. (Hit RETURN to skip PETSc.): "
    read PETSC_DIR
    export PETSC_DIR

    if [[ -n "$PETSC_DIR" ]]; then
        export CONF="--with-petsc=$PETSC_DIR --with-deptrack ${CONF}"

        export PETSC_INCLUDE="-I${PETSC_DIR}/include -I${PETSC_DIR}/include"

        export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -l:libblas.so -l:liblapack.so -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"
        echo -n "Enter PETSC_LIB. Note that you may also need to include libraries for LAPACK and BLAS also. (Hit return to use default $PETSC_LIB):"
        read PETSC_LIB_
        if  [[ -n "$PETSC_LIB_" ]]; then export PETSC_LIB=$PETSC_LIB_; fi
    fi

    if [[ "${BASECODE}" == "base" ]]; then
        echo "Configure with basic fucntion"
   	CONF="${CONF} --with-base" 
    elif [[ "${BASECODE}" == "adv" ]]; then
        echo "Configure with advance fucntion"
   	CONF="${CONF} --with-adv" 
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
        export USEGPU="yes"
    else
        export USEGPU="no"
    fi

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
        export USEHYPRE="yes"
	export PETSC_LIB="${PETSC_LIB} -lHYPRE"
    else
        export USEHYPRE="no"
    fi

    PMAKE="-j2"
}

function config_base
{
    CONF="--with-base"
    HASMPI=`which mpicxx`
    if [[ -n "$HASMPI" ]]; then
        export CXX="mpicxx ${OPTS}"
        export F77="mpif77 ${OPTS}"
        export CC="mpicc ${OPTS}"
    else
        export CXX="g++ ${OPTS}"
        export F77="gfortran ${OPTS}"
        export CC="gcc ${OPTS}"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
        export USEGPU="yes"
    else
        export USEGPU="no"
    fi

    if [[ $WITHHDF -eq 1 ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/hdf"
    fi
    export CONF="--with-mpich=/usr/local/pkg/mpich2 --with-deptrack ${CONF}"
    WITHHDF=0;
    WITHGD=0;

    PMAKE="-j2"
}

function config_adv
{
    # advance platforms. 
    CONF="--with-adv"
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export scriptotherlibs="${scriptotherlibs} /usr/lib/libblas.so /usr/lib/x86_64-linux-gnu/libgfortran.so.3"

    export PETSC_DIR=/usr/local/pkg/petsc
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lHYPRE -llapack -lblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
        export USEHYPRE="yes"
    else
        export USEHYPRE="no"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
        export USEGPU="yes"
    else
        export USEGPU="no"
    fi

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/hdf"
    fi

    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr"
    fi

    export CONF="--with-mpich=/usr/local/pkg/mpich2 --with-petsc=${PETSC_DIR} --with-deptrack ${CONF} --with-gd=/usr"
    PMAKE="-j2"
}

function config_blade
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export PETSC_DIR=/home/netusers/visitor/xiaolin/newpkg/petsc
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lflapack -lfblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11 -lgfortran" 

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/home/netusers/visitor/xiaolin/pkg/hdf"
    fi
    if [[ -n "$WITHGD" ]]; then
        CONF="$CONF --with-gd=/home/netusers/visitor/xiaolin/newpkg/gd"
    fi
    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/home/netusers/visitor/xiaolin/newpkg/gd"
    fi

    export CONF="--with-mpich=/home/netusers/visitor/xiaolin/newpkg/mpich --with-petsc=${PETSC_DIR} --with-deptrack ${CONF} --with-gd=/home/netusers/visitor/xiaolin/newpkg/gd"
    PMAKE="-j2"
}

function config_vogon
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export PETSC_DIR=/usr/local/pkg/petsc-3.1-p7
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -llapack -lblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/HDF4"
    fi
    if [[ -n "$WITHHDF5" ]]; then
        CONF="$CONF --with-hdf5=/nfs/user01/duowang/hdf5-1.8.5"
        #CONF="$CONF --with-hdf5=/usr/local/pkg/HDF5"
    fi
    if [[ -n "$WITHGD" ]]; then
        CONF="$CONF --with-gd=/usr"
    fi
    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr"
    fi

    export CONF="--with-openmpi=/usr/local/pkg/openmpi --with-petsc=${PETSC_DIR} --with-deptrack ${CONF}"
    PMAKE="-j2"
}

function config_alpha
{
    export CXX="mpic++ ${OPTS} ${COPTS_GCC}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"

    #export scriptotherlibs="${scriptotherlibs} /usr/lib/x86_64-linux-gnu/libblas.so /usr/lib/x86_64-linux-gnu/libgfortran.so.3"

    GD_DIR=/usr/lib/x86_64-linux-gnu
    HDF4_DIR=/usr/local/pkg/hdf

    PETSC_DIR=/usr/local/pkg/petsc
    export PETSC_LDFLAGS="-lpetsc -lHYPRE -llapack -lblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"
    
    CGAL_INCLUDE="-I/usr/include"
    CGAL_LIB="-L/usr/lib/x86_64-linux-gnu"

    CVODE_DIR=/usr/local/pkg/cvode


    if [[ $WITHHYPRE == 1 ]]; then
        CONF="${CONF} --with-hypre"
	    export USEHYPRE="yes"
    else
	    export USEHYPRE="no"
    fi

    if [[ $WITHGPU == 1 ]]; then
        CONF="${CONF} --with-gpu"
	    export USEGPU="yes"
    else
	    export USEGPU="no"
    fi

    export CONF="--with-mpich=/usr/local/pkg/mpich2-3.2 --with-petsc=${PETSC_DIR} --with-cgal-include=${CGAL_INCLUDE} --with-cgal-library=${CGAL_LIB} --with-cvode=${CVODE_DIR} --with-deptrack --with-hdf4=${HDF4_DIR} --with-gd=/usr/lib/x86_64-linux-gnu ${CONF}"
    
    PMAKE="-j2"
}

function config_beta
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export scriptotherlibs="${scriptotherlibs} /lib64/libblas.so /lib64/libgfortran.so.3"

    export PETSC_DIR=/usr/local/pkg/petsc3.1-mpich2
    export CVODE_DIR=/usr/local/pkg/cvode
    export CGAL_DIR=/usr/local/pkg/cgal

    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -llapack -lblas -ldl -lm -L/usr/X11R6/lib -lX11 -lHYPRE"

    export CGAL_INCLUDE=${CGAL_DIR}/include
    export CGAL_LIB=${CGAL_DIR}/lib 

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
	export USEHYPRE="yes"
    else
	export USEHYPRE="no"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
	export USEGPU="yes"
    else
	export USEGPU="no"
    fi

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/hdf"
    fi

    export CONF="--with-mpi --with-petsc=${PETSC_DIR} --with-deptrack ${CONF} --with-gd=/usr/local/pkg/gd --with-cgal=${CGAL_DIR} --with-cvode=${CVODE_DIR}"
    PMAKE="-j2"
}

function config_intruder
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export PETSC_DIR=/opt/petsc3.1-mpich2
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -llapack -lblas -ldl -lm -L/usr/X11R6/lib -lX11 -lHYPRE"
    export scriptotherlibs="${scriptotherlibs} /opt/zlib/lib/libz.so /opt/szip/lib/libsz.so"

    CGAL_INCLUDE="/usr/include"
    CGAL_LIB="/usr/lib64"

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
        export USEHYPRE="yes"
    else
        export USEHYPRE="no"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
        export USEGPU="yes"
    else
        export USEGPU="no"
    fi
    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/opt/hdf"
    fi
    if [[ -n "$WITHGD" ]]; then
        CONF="$CONF --with-gd=/opt/gd"
    fi

    export CONF="--with-mpi --with-petsc=${PETSC_DIR} --with-cgal-include=${CGAL_INCLUDE} --with-cgal-lib=${CGAL_LIB} --with-cvode=${CVODE_DIR} --with-deptrack"
    PMAKE="-j2"
}

function config_sigma
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export scriptotherlibs="${scriptotherlibs} /usr/lib/libblas.so /usr/lib/x86_64-linux-gnu/libgfortran.so.3" 

    export PETSC_DIR=/usr/local/pkg/petsc
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lHYPRE -llapack -lblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
	export USEHYPRE="yes"
    else
	export USEHYPRE="no"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
	export USEGPU="yes"
    else
	export USEGPU="no"
    fi

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/hdf"
    fi

    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr"
    fi

    export CONF="--with-mpich=/usr/local/pkg/mpich2 --with-petsc=${PETSC_DIR} --with-deptrack ${CONF} --with-gd=/usr"
    PMAKE="-j2"
}

function config_icing
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export scriptotherlibs="${scriptotherlibs} /usr/lib/libblas.so /usr/lib/x86_64-linux-gnu/libgfortran.so.3 -L/usr/local/pkg/szip/lib" 

    export PETSC_DIR=/home/icing/FronTier/PETSC
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lHYPRE -llapack -lblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"

    CVODE_DIR=/usr/local/pkg/cvode

    CGAL_INCLUDE="/usr/include"
    CGAL_LIB="/usr/lib"

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
	export USEHYPRE="yes"
    else
	export USEHYPRE="no"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
	export USEGPU="yes"
    else
	export USEGPU="no"
    fi

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/hdf"
        export needsz=" -lsz"
    fi
    if [[ -n "$WITHGD" ]]; then
        CONF="$CONF --with-gd=/usr/local/pkg/gd"
    fi

    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr"
    fi

    export CONF="--with-mpich=/usr/local/pkg/mpich2 --with-petsc=${PETSC_DIR} --with-cgal-include=${CGAL_INCLUDE} --with-cgal-lib=${CGAL_LIB} --with-cvode=${CVODE_DIR} --with-deptrack ${CONF} --with-gd=/usr"
    PMAKE="-j2"
}

function config_omega
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export scriptotherlibs="${scriptotherlibs} /usr/lib/libblas.so /usr/lib/x86_64-linux-gnu/libgfortran.so.3" 

    export PETSC_DIR=/usr/local/pkg/petsc
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lHYPRE -llapack -lblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"

    CVODE_DIR=/usr/local/pkg/cvode

    CGAL_INCLUDE="/usr/include"
    CGAL_LIB="/usr/lib"

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
	export USEHYPRE="yes"
    else
	export USEHYPRE="no"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
	export USEGPU="yes"
    else
	export USEGPU="no"
    fi

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/hdf"
    fi

    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr"
    fi

    export CONF="--with-mpich=/usr/local/pkg/mpich2 --with-petsc=${PETSC_DIR} --with-cgal-include=${CGAL_INCLUDE} --with-cgal-lib=${CGAL_LIB} --with-cvode=${CVODE_DIR} --with-deptrack ${CONF} --with-gd=/usr"
    PMAKE="-j2"
}

function config_lambda
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export scriptotherlibs="${scriptotherlibs} /usr/lib/libblas.so /usr/lib/x86_64-linux-gnu/libgfortran.so.3"

    export PETSC_DIR=/usr/local/pkg/petsc
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lHYPRE -llapack -lblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
        export USEHYPRE="yes"
    else
        export USEHYPRE="no"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
        export USEGPU="yes"
    else
        export USEGPU="no"
    fi

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/hdf"
    fi

    export CONF="--with-mpich=/usr/local/pkg/mpich2-3.2 --with-petsc=${PETSC_DIR} --with-deptrack ${CONF} --with-gd=/usr"
    PMAKE="-j2"
}

function config_gradOne
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export scriptotherlibs="${scriptotherlibs} /usr/lib/libblas.so /usr/lib/x86_64-linux-gnu/libgfortran.so.3"

    #export PETSC_INCLUDE="-I/usr/include/petsc"
    #export PETSC_LIB="-L/usr/lib -lpetsc -lHYPRE -llapack -lblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
        export USEHYPRE="yes"
    else
        export USEHYPRE="no"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
        export USEGPU="yes"
    else
        export USEGPU="no"
    fi

    #if [[ -n "$WITHHDF" ]]; then
     #   CONF="$CONF --with-hdf=/usr"
    #fi

    export CONF="--with-deptrack ${CONF} --with-gd=/usr"
    PMAKE="-j2"
}

function config_delta
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export PETSC_DIR=/usr/local/pkg/petsc
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lHYPRE -llapack -lblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
	export USEHYPRE="yes"
    else
	export USEHYPRE="no"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
	export USEGPU="yes"
    else
	export USEGPU="no"
    fi

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/hdf"
    fi
    if [[ -n "$WITHGD" ]]; then
        CONF="$CONF --with-gd=/usr"
    fi
    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr"
    fi

    export CONF="--with-mpich=/usr/local/pkg/mpich --with-petsc=${PETSC_DIR} --with-deptrack ${CONF} --with-gd=/usr"
    PMAKE="-j2"
}

function config_ycshu
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export PETSC_DIR=/usr/local/petsc
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lflapack -lfblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11 -lgfortran" 

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/"
    fi
    if [[ -n "$WITHGD" ]]; then
        CONF="$CONF --with-gd=/usr/local"
    fi
    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr/local"
    fi

    export CONF="--with-mpich=/usr/local/mpich --with-petsc=${PETSC_DIR} --with-deptrack ${CONF} --with-gd=/usr/local"
    PMAKE="-j2"
}

function config_ubuntu
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export PETSC_DIR=/usr/lib/petscdir/3.0.0
    export PETSC_ARCH=linux-gnu-c-opt
    export PETSC_INCLUDE="-I${PETSC_DIR}/include -I${PETSC_DIR}/${PETSC_ARCH}/include"
    export PETSC_LIB="-lblas -llapack -L${PETSC_DIR}/${PETSC_ARCH}/lib -lpetscksp -lpetscdm -lpetscmat -lpetscvec -lpetsc -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/lib"
    fi
    if [[ -n "$WITHHDF5" ]]; then
        CONF="$CONF --with-hdf5=/usr/lib"
    fi
    if [[ -n "$WITHGD" ]]; then
        CONF="$CONF --with-gd=/usr"
    fi
    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr"
    fi

    export CONF="--with-mpi --with-petsc=${PETSC_DIR} --with-deptrack ${CONF}"
    PMAKE="-j2"
}

function config_gentooORNL
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export PETSC_DIR=/home/dealmeida/codes-tryout/petsc-3.1-p8_ompi-1.4.3_gcc-4.4.4_lpt1
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"

    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lflapack -lfblas -ldl -fopenmp -lm -L/usr/lib64 -lX11"

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/HDF4"
    fi
    if [[ -n "$WITHHDF5" ]]; then
        CONF="$CONF --with-hdf5=/nfs/user01/duowang/hdf5-1.8.5"
        #CONF="$CONF --with-hdf5=/usr/local/pkg/HDF5"
    fi
    if [[ -n "$WITHGD" ]]; then
        CONF="$CONF --with-gd=/usr"
    fi
    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr"
    fi

    export CONF="--with-openmpi=/usr/local/ompi --with-petsc=${PETSC_DIR} --with-deptrack ${CONF}"
    PMAKE="-j2"
}

function config_fission
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export PETSC_DIR=/home/dealvf/libs/petsc-3.1-p8_ompi_gcc-1.4.3_fission
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"

    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lflapack -lfblas -ldl -fopenmp -lm -L/usr/X11R6/lib64 -lX11"

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/HDF4"
    fi
    if [[ -n "$WITHHDF5" ]]; then
        CONF="$CONF --with-hdf5=/nfs/user01/duowang/hdf5-1.8.5"
        #CONF="$CONF --with-hdf5=/usr/local/pkg/HDF5"
    fi
    if [[ -n "$WITHGD" ]]; then
        CONF="$CONF --with-gd=/usr"
    fi
    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr"
    fi

    export CONF="--with-openmpi=/apps/local/openmpi/1.4.3/gcc-4.1.2/opt --with-petsc=${PETSC_DIR} --with-deptrack ${CONF}"
    PMAKE="-j2"
}


function config_galaxy
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

#    export PETSC_DIR=/nfs/user02/ams530/shuwang/petsc-3.0.0-p12
    export PETSC_DIR=/nfs/admin/shiqiangqiang/petsc-3.0.0-p12
    export PETSC_ARCH=linux-gnu-c-debug
    export PETSC_INCLUDE="-I${PETSC_DIR}/include -I${PETSC_DIR}/${PETSC_ARCH}/include"
    export PETSC_LIB="-lblas -llapack -L${PETSC_DIR}/${PETSC_ARCH}/lib -lpetscksp -lpetscdm -lpetscmat -lpetscvec -lpetsc -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"
    
    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/HDF4"
    fi
    if [[ -n "$WITHHDF5" ]]; then
        CONF="$CONF --with-hdf5=/nfs/user01/duowang/hdf5-1.8.5"
	#CONF="$CONF --with-hdf5=/usr/local/pkg/HDF5"
    fi

    export CONF="--with-openmpi=/usr/local/pkg/openmpi --with-petsc=${PETSC_DIR} --with-gd=/usr/local/pkg/gd --with-deptrack ${CONF}"
    PMAKE="-j2"
}

function config_seawulf
{
    if [[ -z "$LD_LIBRARY_PATH" ]]; then
        echo "#### There seems to be a problem in your environment setting."
        echo "#### You need to set LD_LIBRARY_PATH to include /usr/local/pkg/openmpi/lib."
	exit
    fi
    echo "### Make sure you have the following environment variables set in .bash_profile or .cshrc:"
    echo "export PATH=$PATH:/usr/local/pkg/torque/bin:/usr/local/pkg/openmpi/bin:/usr/local/pkg/HDF4/bin"
    echo "export LD_LIBRARY_PATH=/usr/local/pkg/petsc-2.3.3-p11/lib:/usr/local/pkg/HDF4/lib:/usr/local/pkg/openmpi/lib"
    echo
    echo

    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export PETSC_DIR=/usr/local/pkg/petsc-2.3.3-p11
    export PETSC_ARCH=linux-gnu-c-debug
    export PETSC_INCLUDE="-I${PETSC_DIR}/include -I${PETSC_DIR}/bmake/${PETSC_ARCH}"
    export PETSC_LIB="-lblas -llapack -L${PETSC_DIR}/lib/${PETSC_ARCH} -lpetscksp -lpetscdm -lpetscmat -lpetscvec -lpetsc -ldl -fopenmp -lm -lX11"

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/HDF4"
    fi
    if [[ -n "$WITHHDF5" ]]; then
        CONF="$CONF --with-hdf5=/nfs/user07/duowang/hdf5-1.8.5"
	#CONF="$CONF --with-hdf5=/usr/local/pkg/HDF5"
    fi
    export CONF="--with-openmpi --with-petsc=${PETSC_DIR} --with-deptrack ${CONF}"
    PMAKE="-j2"
}

function config_nybluel
{
    export PETSC_ARCH=bgl-ibm-opt
    export PETSC_DIR=/bgl/apps/petsc-2.3.3-p8/petsc-2.3.3-p8
    export PETSC_INCLUDE="-I${PETSC_DIR}/include -I${PETSC_DIR}/bmake/${PETSC_ARCH}"
    export HYPRE_DIR=/bgl/apps/petsc-2.3.3-p8/petsc-2.3.3-p8/externalpackages/hypre-2.0.0/bgl-ibm-opt/lib
    export SUPERLU_DIST_DIR=/bgl/apps/petsc-2.3.3-p8/petsc-2.3.3-p8/externalpackages/SuperLU_DIST_2.0-Jan_5_2006/bgl-ibm-opt
    export SUPERLU_DIR=/bgl/apps/petsc-2.3.3-p8/petsc-2.3.3-p8/externalpackages/SuperLU_3.0-Jan_5_2006/bgl-ibm-opt
    export NSS_FILES_DIR=/bgl/BlueLight/ppcfloor/blrts-gnu/powerpc-bgl-blrts-gnu/lib

    export PETSC_LIB="-L${PETSC_DIR}/lib/${PETSC_ARCH} -lpetscksp -lpetscdm -lpetscmat -lpetscvec -lpetsc -lg2c -L/bgl/local/lib -L${HYPRE_DIR} -lHYPRE -L${SUPERLU_DIR} -lsuperlu_3.0 -L${SUPERLU_DIST_DIR} -lsuperlu_dist_2.0  -lc -L${NSS_FILES_DIR} -lnss_files -lnss_dns -lresolv -llapack.rts -lblas.rts -L/usr/lib -ldl -lm"

    export F77_LIBS="-L/opt/ibmcmp/xlsmp/bg/1.7/blrts_lib -L/opt/ibmcmp/xlmass/bg/4.4/blrts_lib -L/opt/ibmcmp/xlf/bg/11.1/blrts_lib -lxlf90 -lxlopt -lxlomp_ser -lxl -lxlfmath -fopenmp -lm -lc -lgcc"

    export CXX="mpixlcxx -DMPICH_IGNORE_CXX_SEEK ${OPTS}"
    export F77="mpixlf77 ${OPTS}"
    export CC="mpixlc ${OPTS}"

    if [[ -n "$WITHHDF5" ]]; then
        CONF="$CONF --with-hdf5=/bgl/apps/hdf5"
    fi

    export CONF="--with-mpi --with-extra-libs=-lmpich.rts --with-petsc=${PETSC_DIR} $CONF"
    PMAKE="-j8"
}


function config_nybluep
{
    export CXX="mpixlcxx_r -DMPICH_IGNORE_CXX_SEEK ${OPTS}"
    export F77="mpixlf77_r ${OPTS}"
    export CC="mpixlc_r ${OPTS}"

    export CONF="--with-mpi --with-extra-libs=-lmpich.cnk $CONF"
    PMAKE="-j8"
}

function config_pnnl
{
    export CXX="mpiCC ${OPTS} ${COPTS_ICC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_ICC}"
    
    # Specify Petsc path
    export PETSC_ARCH=linux-hpmpi-intel
    export PETSC_DIR=/hptc_cluster/apps/libraries/petsc/2.3.3-p8/Intel
    export PETSC_INCLUDE="-I${PETSC_DIR}/include -I${PETSC_DIR}/bmake/${PETSC_ARCH}"
    export PETSC_LIB="-lblas -L${PETSC_DIR}/lib/${PETSC_ARCH} -lpetscksp -lpetscdm -lpetscmat -lpetscvec -lpetsc -ldl -fopenmp -lm -L/usr/X11R6/lib64"
    
    export CONF="--with-mpi --with-petsc=$PETSC_DIR --with-deptrack ${CONF}"
    PMAKE="-j8"
}

function config_abe
{
    export CXX="mpicxx -DMPICH_IGNORE_CXX_SEEK -Wcheck ${OPTS} ${COPTS_ICC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_ICC}"

    # Specify Petsc path
    export PETSC_ARCH=abe-intel10-opt
    export PETSC_DIR=/usr/apps/math/petsc/petsc-2.3.3-p7
    export PETSC_INCLUDE="-I${PETSC_DIR}/include -I${PETSC_DIR}/bmake/${PETSC_ARCH}"
    export PETSC_LIB="-lblas -llapack -L${PETSC_DIR}/lib/${PETSC_ARCH} -lpetscksp -lpetscdm -lpetscmat -lpetscvec -lpetsc -L ${MKL_HOME}/lib/em64t -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -ldl -fopenmp -lm -L/usr/X11R6/lib64"

    # add szip library
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/apps/hdf/szip/lib
    export scriptotherlibsinc="${scriptotherlibincs} -L/usr/apps/hdf/szip/lib"
    export scriptotherlibs="${scriptotherlibs} -lsz"

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/apps/hdf/hdf4/v423"
    fi
    if [[ -n "$WITHHDF5" ]]; then
        CONF="$CONF --with-hdf5=/usr/apps/hdf/phdf5/v185"
    fi

    export CONF="-with-mpich --with-petsc=$PETSC_DIR --with-deptrack ${CONF}"
    PMAKE="-j8"
}

function config_excalibur
{
     export CXX="CC ${OPTS}"
     export F77="ftn ${OPTS}"
     export CC="cc ${OPTS}"

     HDF5_DIR=/p/home/linli/pkg/hdf
     if [[ -n "$HDF5_DIR" ]]; then
         CONF="$CONF --with-hdf=$HDF5_DIR"
     fi

     GD_DIR=/p/home/linli/pkg/gd
     if [[ -n "$GD_DIR" ]]; then
         CONF="$CONF --with-gd=$GD_DIR"
     fi

     PETSC_DIR=/p/home/linli/pkg/petsc3.1
     export PETSC_DIR

    export scriptotherlibs="${scriptotherlibs} -L/p/home/linli/pkg/szip/lib -L/p/home/linli/pkg/zlib/lib -lsz -limf"
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/p/home/linli/pkg/szip/lib "
    if [[ -n "$PETSC_DIR" ]]; then
        export CONF="--with-petsc=$PETSC_DIR --with-deptrack ${CONF}"

        export PETSC_INCLUDE="-I${PETSC_DIR}/include -I${PETSC_DIR}/include"

        export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
        export USEGPU="yes"
    else
        export USEGPU="no"
    fi

    export CGAL_DIR=/p/home/linli/pkg/cgal
    export CONF="$CONF --with-cgal-dir=$CGAL_DIR"
    #export BOOST_DIR=/app/unsupported/COST/boost-mpi/1.58.0/gnu/craympt
    export BOOST_DIR=/app/unsupported/COST/boost/1.58.0/gnu
    export CONF="$CONF --with-boost-dir=$BOOST_DIR"
    export CVODE_DIR=/p/home/linli/pkg/cvode
    export CONF="$CONF --with-cvode=$CVODE_DIR"

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre --with-mpi"
        export USEHYPRE="yes"
	export PETSC_LIB="${PETSC_LIB} -lHYPRE"
    else
        export USEHYPRE="no"
    fi

    PMAKE="-j2"
}

function config_cm
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export scriptotherlibs="${scriptotherlibs} /usr/lib64/libgfortran.so.3"

    export PETSC_DIR=/home/zgao/pkg/petsc
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"
    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lHYPRE -llapack -lblas -ldl -fopenmp -lm -L/usr/X11R6/lib -lX11"

    if [[ -n "$WITHHYPRE" ]]; then
        CONF="$CONF --with-hypre"
        export USEHYPRE="yes"
    else
        export USEHYPRE="no"
    fi

    if [[ -n "$WITHGPU" ]]; then
        CONF="$CONF --with-gpu"
        export USEGPU="yes"
    else
        export USEGPU="no"
    fi

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/home/zgao/pkg/hdf"
    fi

    export CONF="--with-mpich=/software/mvapich2/2.0b-intel --with-petsc=${PETSC_DIR} --with-deptrack ${CONF} --with-gd=/home/zgao/pkg/gd"
    PMAKE="-j2"
}

function config_icestorm
{
    export CXX="mpicxx ${OPTS} ${COPTS_GCC}"
    export F77="mpif77 ${OPTS}"
    export CC="mpicc ${OPTS} ${COPTS_GCC}"

    export PETSC_DIR=/home/dealvf/libs/petsc-3.1-p8_ompi_gcc-1.4.3_icestorm
    export PETSC_INCLUDE="-I${PETSC_DIR}/include"

    export PETSC_LIB="-L${PETSC_DIR}/lib -lpetsc -lflapack -lfblas -ldl -fopenmp -lm -L/usr/X11R6/lib64 -lX11"

    if [[ -n "$WITHHDF" ]]; then
        CONF="$CONF --with-hdf=/usr/local/pkg/HDF4"
    fi
    if [[ -n "$WITHHDF5" ]]; then
        CONF="$CONF --with-hdf5=/nfs/user01/duowang/hdf5-1.8.5"
        #CONF="$CONF --with-hdf5=/usr/local/pkg/HDF5"
    fi
    if [[ -n "$WITHGD" ]]; then
        CONF="$CONF --with-gd=/usr"
    fi
    if [[ -n "$WITHGSL" ]]; then
        CONF="$CONF --with-gsl=/usr"
    fi

    export CONF="--with-openmpi=/usr/local/openmpi/openmpi-1.4.3/gcc-opt --with-petsc=${PETSC_DIR} --with-deptrack ${CONF}"
    PMAKE="-j2"
}

#########################################


parse_arguments $*

HOST=`uname -n`;
# Invoke machine specific config function
if [[ "${BASECODE}" == "base" ]] || [[ "${BASECODE}" == "adv" ]]; then
    echo "Base code, using generic configuration"
    config_generic
elif [[ "${HOST}" == "fenp" ]]; then
    echo "Computer is recognized as NYBlue/P."
    config_nybluep
elif [[ "${HOST}" == "fen" ]]; then
    echo "Computer is recognized as NYBlue/L."
    config_nybluel
elif [[ "${HOST}" == "dontpanic" ]]; then
    echo "Computer is recognized as Vogon."
    config_vogon
elif [[ "${HOST}" == "sirius" ]]; then
    echo "Computer is recognized as Galaxy."
    config_galaxy
elif [[ "${HOST}" == "alpha" ]]; then
    echo "Computer is recognized as alpha."
    config_alpha
elif [[ "${HOST}" == "grad01" ]]; then
    echo "Computer is recognized as grad01."
    config_gradOne
elif [[ "${HOST}" == "intruder.cluster" ]]; then
    echo "Computer is recognized as intruder cluster."
    config_intruder
elif [[ "${HOST}" == "beta" ]]; then
    echo "Computer is recognized as beta."
    config_beta
elif [[ "${HOST}" == "omega" ]]; then
    echo "Computer is recognized as omega."
    config_omega
elif [[ "${HOST}" == "icing-desktop" ]]; then
    echo "Computer is recognized as icing."
    config_icing
elif [[ "${HOST}" == "sigma" ]]; then
    echo "Computer is recognized as sigma."
    config_sigma
elif [[ "${HOST}" == "lambda" ]]; then
    echo "Computer is recognized as lambda."
    config_lambda
elif [[ "${HOST}" == "linli-pc" ]]; then
    echo "Computer is recognized as linli-pc."
    config_alpha
elif [[ "${HOST}" == "newdelta" ]]; then
    echo "Computer is recognized as Delta."
    config_delta
elif [[ "${HOST}" == "blade1" ]]; then
    echo "Computer is recognized as blade."
    config_blade
elif [[ "${HOST}" == "blade2" ]]; then
    echo "Computer is recognized as blade."
    config_blade
elif [[ "${HOST}" == "blade3" ]]; then
    echo "Computer is recognized as blade."
    config_blade
elif [[ "${HOST}" == "blade4" ]]; then
    echo "Computer is recognized as blade."
    config_blade
elif [[ "${HOST}" == "blade5" ]]; then
    echo "Computer is recognized as blade."
    config_blade
elif [[ "${HOST}" == "seawulf" ]]; then
    echo "Computer is recognized as Seawulf."
    config_seawulf
elif [[ "${HOST}" == "cu0login1" ]]; then
    echo "Computer is recognized as cu0login1."
    config_pnnl
elif [[ "${HOST}" == "jiao-pc3" ]]; then
    echo "Computer is recognized as Ubuntu."
    config_ubuntu
elif [[ "${HOST//[0-9]/}" == "honest.ncsa.uiuc.edu" ]]; then
    echo "Computer is recognized as NCSA Abe Linux cluster."
    config_abe
elif [[ "${HOST}" == "lpt1" ]]; then
    echo "Computer is recognized as Gentoo Linux for ORNL Laptop."
    config_gentooORNL
elif [[ "${HOST}" == "flogin1" ]]; then
    echo "Computer is recognized as INL Fission."
    config_fission
elif [[ "${HOST}" == "service0" ]]; then
    echo "Computer is recognized as INL Icestorm."
    config_icestorm
elif [[ "${HOST}" == "ycshu-VirtualBox" ]]; then
    echo "Computer is recognized as blade."
    config_ycshu
elif [[ "${HOST}" == "cm" ]]; then
    echo "Computer is recognized as cm.faster."
    config_cm
elif [[ "${HOST}" == excalibur* ]]; then
    echo "Computer is recognized as excalibur."
    config_excalibur
else
    echo "Computer was not recognized. Using generic configure options."
    config_generic
fi


echo "Configuring FronTier with the following commands:"
echo "export CC=\"$CC\""
echo "export CXX=\"$CXX\""
echo "export F77=\"$F77\""

if [[ -n "$PETSC_DIR" ]]; then
    echo "export PETSC_DIR=\"$PETSC_DIR\""
    echo "export PETSC_ARCH=\"$PETSC_ARCH\""
    echo "export PETSC_INCLUDE=\"$PETSC_INCLUDE\""
    echo "export PETSC_LIB=\"$PETSC_LIB\""
fi

echo "autoreconf -vif"
echo "./configure $CONF"

# Run autoconf to generate ./configure
autoreconf -vif

# Run ./configure.
./configure $CONF

# Finally, invoke make
if [[ -z "$NOMAKE" ]]; then
    make ${PMAKE} clean
fi

if [[ -z "$NOMAKE" ]]; then
    make ${PMAKE}
fi


