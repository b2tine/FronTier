build_cpu = @build_cpu@
header_files = @headers@
include_dirs=@include_dirs@
BASECODE = @BASECODE@

lib_only:
	cd src && $(MAKE)
	$(MAKE) incs 

ifeq ($(BASECODE),no)
all: 
	cd src && $(MAKE)
	$(MAKE) incs 
	cd Collision && $(MAKE)
	cd airfoil && $(MAKE)
	cd folding && $(MAKE)
	cd parachute && $(MAKE)
	cd cell && $(MAKE)
	cd cFluid && $(MAKE)
	cd wings && $(MAKE)
	cd cim && $(MAKE)
	cd DG && $(MAKE)
	cd inverse && $(MAKE)
	cd crystal && $(MAKE)
	cd curvature && $(MAKE)
	cd finance && $(MAKE)
	cd rgbody && $(MAKE)
	cd climate && $(MAKE)
	cd iFluid && $(MAKE)
	cd vFluid && $(MAKE)
	cd melting && $(MAKE)
	cd pde && $(MAKE)
	cd MonteCarlo && $(MAKE)
	cd timeSeries && $(MAKE)
	cd poisson && $(MAKE)
	cd subsurf && $(MAKE)
else ifeq ($(BASECODE),adv)
all:
	cd src && $(MAKE)
	cd example2d && $(MAKE)
	cd example3d && $(MAKE)
	cd iFluid && $(MAKE)
	cd cFluid && $(MAKE)
	cd crystal && $(MAKE)
	cd melting && $(MAKE)
	cd subsurf && $(MAKE)
else
all:
	cd src && $(MAKE)
	cd example2d && $(MAKE)
	cd example3d && $(MAKE)
	cd iFluid && $(MAKE)
	cd cFluid && $(MAKE)
	cd crystal && $(MAKE)
	cd melting && $(MAKE)
	cd subsurf && $(MAKE)
endif

ifeq ($(BASECODE),no)
clean:
	-cd src && $(MAKE) clean
	-cd example2d && $(MAKE) clean
	-cd example3d && $(MAKE) clean
	-cd iFluid && $(MAKE) clean
	-cd cFluid && $(MAKE) clean
	-cd vFluid && $(MAKE) clean
	-cd wings && $(MAKE) clean
	-cd cim && $(MAKE) clean
	-cd DG && $(MAKE) clean
	-cd inverse && $(MAKE) clean
	-cd Collision && $(MAKE) clean
	-cd airfoil && $(MAKE) clean
	-cd folding && $(MAKE) clean
	-cd parachute && $(MAKE) clean
	-cd cell && $(MAKE) clean
	-cd crystal && $(MAKE) clean
	-cd curvature && $(MAKE) clean
	-cd finance && $(MAKE) clean
	-cd rgbody && $(MAKE) clean
	-cd climate && $(MAKE) clean
	-cd melting && $(MAKE) clean
	-cd pde && $(MAKE) clean
	-cd MonteCarlo && $(MAKE) clean
	-cd timeSeries && $(MAKE) clean
	-cd poisson && $(MAKE) clean
	-cd subsurf && $(MAKE) clean
	-cd iTaps && $(MAKE) clean
	-cd lib/$(build_cpu) && $(RM) *.a
	-cd lib/$(build_cpu) && rm -rf gas
	-rm -rf include
else  ifeq ($(BASECODE),adv)
clean:
	-cd src && $(MAKE) clean
	-cd example2d && $(MAKE) clean
	-cd example3d && $(MAKE) clean
	-cd iFluid && $(MAKE) clean
	-cd cFluid && $(MAKE) clean
	-cd crystal && $(MAKE) clean
	-cd melting && $(MAKE) clean
	-cd subsurf && $(MAKE) clean
	-cd lib/$(build_cpu) && $(RM) *.a
	-rm -rf include
else
clean:
	-cd src && $(MAKE) clean
	-cd example2d && $(MAKE) clean
	-cd example3d && $(MAKE) clean
	-cd cFluid && $(MAKE) clean
	-cd lib/$(build_cpu) && $(RM) *.a
	-rm -rf include
endif

distclean:
	cd src && $(MAKE) distclean && $(RM) Makefile
	cd example2d && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd example3d && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd iFluid && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd cFluid && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd vFluid && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd wings && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd cim && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd DG && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd inverse && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd Collision && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd airfoil && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd folding && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd parachute && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd parachute2d && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd proj && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd solver && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd sprModel && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd weno && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd cell && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd crystal && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd curvature && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd finance && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd rgbody && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd climate && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd melting && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd pde && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd MonteCarlo && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd timeSeries && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd poisson && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd subsurf && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	cd iTaps && $(MAKE) clean && $(RM) Makefile && $(RM) tags
	rm -rf include
	rm -rf lib
	rm -rf autom4te.cache
	$(RM) config.log 
	$(RM) config.status 
	$(RM) configure
	$(RM) devel-deps.inc 
	$(RM) iMesh-Defs.inc
	$(RM) Makefile

diff:
	cd src && $(MAKE) diff
	-diff -r . $(diffdir) > DIFF


incs: $(include_dirs) include/FronTier.h $(header_files)

include/FronTier:
	mkdir include include/FronTier

$(include_dirs): include/FronTier
	mkdir $@

include/FronTier.h: $(include_dirs) 
	@echo "#include <FronTier/front/fdecs.h>" > include/FronTier.h

$(header_files): include/FronTier/%: src/% 
	@echo "updating: "$@; \
	sed -e "1,$$ s,include <,include <FronTier/,g" $^ | \
	sed -e "1,$$ s,include <FronTier/hdf,include <hdf,g" | \
	sed -e "1,$$ s,include <FronTier/hdf5,include <hdf5,g" | \
	sed -e "1,$$ s,include <FronTier/mpi,include <mpi,g" | \
	sed -e "1,$$ s,include <FronTier/mfhdf,include <mfhdf,g" | \
	sed -e "1,$$ s,FronTier/cdecs.h,FronTier/util/cdecs.h,g" | \
	sed -e "1,$$ s,FronTier/vmalloc.h,FronTier/util/vmalloc.h,g" | \
	sed -e "1,$$ s,FronTier/fnamedebug.h,FronTier/util/fnamedebug.h,g"|  \
	sed -e "1,$$ s,FronTier/uprotos.h,FronTier/util/uprotos.h,g"| \
	sed -e "1,$$ s,FronTier/navdecs.h,FronTier/util/navdecs.h,g" | \
	sed -e "1,$$ s,FronTier/gd.h,gd.h,g" | \
	sed -e "1,$$ s,FronTier/gdfonts.h,gdfonts.h,g" | \
	sed -e "1,$$ s,FronTier/gdfontl.h,gdfontl.h,g" | \
	sed -e "1,$$ s,FronTier/gdfontt.h,gdfontt.h,g" | \
	sed -e "1,$$ s,FronTier/stdlib.h,stdlib.h,g" | \
	sed -e "1,$$ s,FronTier/stdio.h,stdio.h,g" | \
	sed -e "1,$$ s,FronTier/stdint.h,stdint.h,g" | \
	sed -e "1,$$ s,FronTier/string.h,string.h,g" | \
	sed -e "1,$$ s,FronTier/unistd.h,unistd.h,g" | \
	sed -e "1,$$ s,FronTier/ctype.h,ctype.h,g" | \
	sed -e "1,$$ s,FronTier/math.h,math.h,g" | \
	sed -e "1,$$ s,FronTier/omp.h,omp.h,g" | \
	sed -e "1,$$ s,FronTier/limits.h,limits.h,g" | \
	sed -e "1,$$ s,FronTier/float.h,float.h,g" | \
	sed -e "1,$$ s,FronTier/errno.h,errno.h,g" | \
	sed -e "1,$$ s,FronTier/libgen.h,libgen.h,g" | \
	sed -e "1,$$ s,FronTier/algorithm,algorithm,g" | \
	sed -e "1,$$ s,FronTier/string,string,g" > $@

$(header_files): $(include_dirs)






test:	
	cd example2d && $(MAKE)


TARFLIST = $$ME/README \
$$ME/build \
$$ME/install-sh \
$$ME/config.status \
$$ME/config.sub \
$$ME/config.guess \
$$ME/devel-deps.inc.in \
$$ME/iMesh-Defs.inc.in \
$$ME/configure.in \
$$ME/run-*.pbs \
$$ME/src/util/mkdep.pl \
$$ME/src/util/mkfiles.pl \
$$ME/src/util/ftrules \
$$ME/src/util/gasrules \
$$ME/configure.in \
$$ME/Makefile.in \
$$ME/src/Makefile.in \
$$ME/example2d/*.cpp \
$$ME/example2d/Makefile.in \
$$ME/example2d/README \
$$ME/example3d/*.cpp \
$$ME/example3d/Makefile.in \
$$ME/curvature/*.cpp \
$$ME/curvature/*.h \
$$ME/curvature/Makefile.in \
$$ME/example3d/README \
$$ME/subsurf/*.cpp \
$$ME/subsurf/*.h \
$$ME/subsurf/Makefile.in \
$$ME/subsurf/input-2d/* \
$$ME/airfoil/*.cpp \
$$ME/airfoil/*.h \
$$ME/airfoil/*.cu \
$$ME/airfoil/*.cuh \
$$ME/airfoil/Makefile.in \
$$ME/airfoil/input-*/* \
$$ME/airfoil/mrun* \
$$ME/folding/*.cpp \
$$ME/folding/*.h \
$$ME/folding/Makefile.in \
$$ME/folding/input-*/* \
$$ME/folding/foldingplan \
$$ME/vFluid/*.cpp \
$$ME/vFluid/*.h \
$$ME/vFluid/Makefile.in \
$$ME/parachute/*.cpp \
$$ME/parachute/Makefile.in \
$$ME/parachute/input-*/* \
$$ME/parachute/mrun* \
$$ME/parachute2d/*.cpp \
$$ME/parachute2d/*.h \
$$ME/parachute2d/Makefile.in \
$$ME/parachute2d/input-*/* \
$$ME/parachute2d/mrun* \
$$ME/Collision/*.cpp \
$$ME/Collision/*.h \
$$ME/sprModel/*.cpp \
$$ME/sprModel/Makefile.in \
$$ME/sprModel/in-* \
$$ME/sprModel/mrun* \
$$ME/crystal/*.cpp \
$$ME/crystal/*.h \
$$ME/crystal/Makefile.in \
$$ME/crystal/README \
$$ME/crystal/input-*/* \
$$ME/crystal/mrun* \
$$ME/melting/*.cpp \
$$ME/melting/*.h \
$$ME/melting/Makefile.in \
$$ME/melting/in-* \
$$ME/melting/mrun* \
$$ME/iFluid/*.cpp \
$$ME/iFluid/*.h \
$$ME/iFluid/Makefile.in \
$$ME/iFluid/input-*/in-* \
$$ME/iFluid/mrun* \
$$ME/cFluid/*.cpp \
$$ME/cFluid/*.h \
$$ME/cFluid/Makefile.in \
$$ME/cFluid/in-* \
$$ME/cFluid/input-*/in-* \
$$ME/cFluid/mrun* \
$$ME/wings/*.cpp \
$$ME/wings/*.h \
$$ME/wings/Makefile.in \
$$ME/wings/in-* \
$$ME/wings/mrun* \
$$ME/wings/wing/* \
$$ME/cim/*.cpp \
$$ME/cim/*.h \
$$ME/cim/Makefile.in \
$$ME/cim/in-* \
$$ME/cim/mrun* \
$$ME/inverse/*.cpp \
$$ME/inverse/*.h \
$$ME/inverse/Makefile.in \
$$ME/inverse/in-* \
$$ME/inverse/mrun* \
$$ME/solver/*.cpp \
$$ME/solver/*.h \
$$ME/solver/Makefile.in \
$$ME/weno/*.cpp \
$$ME/weno/*.h \
$$ME/weno/Makefile.in \
$$ME/weno/in-* \
$$ME/proj/*.cpp \
$$ME/proj/*.h \
$$ME/proj/Makefile.in \
$$ME/rgbody/*.cpp \
$$ME/rgbody/*.h \
$$ME/rgbody/Makefile.in \
$$ME/rgbody/in-* \
$$ME/rgbody/mrun* \
$$ME/climate/*.cpp \
$$ME/climate/*.h \
$$ME/climate/Makefile.in \
$$ME/climate/input-*/* \
$$ME/climate/mrun* \
$$ME/README \
$$ME/finance/*.cpp \
$$ME/finance/*.h \
$$ME/finance/Makefile.in \
$$ME/finance/in-* \
$$ME/finance/mrun* \
$$ME/cell/*.cpp \
$$ME/cell/*.h \
$$ME/cell/Makefile.in \
$$ME/DG/*.cpp \
$$ME/DG/*.h \
$$ME/DG/Makefile.in \
$$ME/DG/in-* \
$$ME/pde/*.cpp \
$$ME/pde/in-* \
$$ME/pde/Makefile.in \
$$ME/MonteCarlo/*.h \
$$ME/MonteCarlo/*.cpp \
$$ME/MonteCarlo/input-*/in-* \
$$ME/MonteCarlo/Makefile.in \
$$ME/timeSeries/*.h \
$$ME/timeSeries/*.cpp \
$$ME/timeSeries/in-* \
$$ME/timeSeries/Makefile.in \
$$ME/timeSeries/mrun \
$$ME/poisson/*.cpp \
$$ME/poisson/*.h \
$$ME/poisson/Makefile.in \
$$ME/iTaps/*.cpp \
$$ME/iTaps/Makefile.in \
$$ME/src/intfc/*.c \
$$ME/src/intfc/*.h  \
$$ME/src/intfc/*.cu \
$$ME/src/intfc/*.cuh  \
$$ME/src/intfc/Makefile.in \
$$ME/src/util/*.h \
$$ME/src/util/*.c \
$$ME/src/util/Makefile.in \
$$ME/src/front/*.c \
$$ME/src/front/*.h \
$$ME/src/front/*.cu \
$$ME/src/front/*.cuh \
$$ME/src/front/Makefile.in \
$$ME/src/front/README \

tar:
	cd ./ && ME=`basename $$PWD` && cd .. && tar -cf "`date +FronTier++.%m_%d_%y.tar`" ${TARFLIST} && \
	gzip "`date +FronTier++.%m_%d_%y.tar`" && mv `date +FronTier++.%m_%d_%y.tar`.gz $$ME/.

ADVTARFLIST = $$ME/README \
$$ME/build \
$$ME/install-sh \
$$ME/config.status \
$$ME/config.sub \
$$ME/config.guess \
$$ME/devel-deps.inc.in \
$$ME/iMesh-Defs.inc.in \
$$ME/configure.in \
$$ME/run-*.pbs \
$$ME/src/util/mkdep.pl \
$$ME/src/util/mkfiles.pl \
$$ME/src/util/ftrules \
$$ME/src/util/gasrules \
$$ME/configure.in \
$$ME/Makefile.in \
$$ME/src/Makefile.in \
$$ME/example2d/*.cpp \
$$ME/example2d/Makefile.in \
$$ME/example2d/README \
$$ME/example2d/mrun \
$$ME/example3d/*.cpp \
$$ME/example3d/Makefile.in \
$$ME/example3d/mrun \
$$ME/example3d/README \
$$ME/crystal/*.cpp \
$$ME/crystal/*.h \
$$ME/crystal/Makefile.in \
$$ME/crystal/README \
$$ME/crystal/input-*/* \
$$ME/crystal/mrun* \
$$ME/iFluid/*.cpp \
$$ME/iFluid/*.h \
$$ME/iFluid/Makefile.in \
$$ME/iFluid/input-*/in-* \
$$ME/iFluid/mrun* \
$$ME/cFluid/*.cpp \
$$ME/cFluid/*.h \
$$ME/cFluid/Makefile.in \
$$ME/cFluid/in-* \
$$ME/cFluid/mrun* \
$$ME/solver/*.cpp \
$$ME/solver/*.h \
$$ME/solver/Makefile.in \
$$ME/src/intfc/*.c \
$$ME/src/intfc/*.h  \
$$ME/src/intfc/*.cu \
$$ME/src/intfc/*.cuh  \
$$ME/src/intfc/Makefile.in \
$$ME/src/util/*.h \
$$ME/src/util/*.c \
$$ME/src/util/Makefile.in \
$$ME/src/front/*.c \
$$ME/src/front/*.h \
$$ME/src/front/*.cu \
$$ME/src/front/*.cuh \
$$ME/src/front/Makefile.in \
$$ME/src/front/README \

adv-tar:
	cd ./ && ME=`basename $$PWD` && cd .. && tar -cf "`date +FronTier++-adv.%m_%d_%y.tar`" ${ADVTARFLIST} && \
	gzip "`date +FronTier++-adv.%m_%d_%y.tar`" && mv `date +FronTier++-adv.%m_%d_%y.tar`.gz $$ME/.

BASETARFLIST = $$ME/README \
$$ME/build \
$$ME/install-sh \
$$ME/config.status \
$$ME/config.sub \
$$ME/config.guess \
$$ME/devel-deps.inc.in \
$$ME/iMesh-Defs.inc.in \
$$ME/configure.in \
$$ME/run-*.pbs \
$$ME/src/util/mkdep.pl \
$$ME/src/util/mkfiles.pl \
$$ME/src/util/ftrules \
$$ME/src/util/gasrules \
$$ME/configure.in \
$$ME/Makefile.in \
$$ME/src/Makefile.in \
$$ME/example2d/*.cpp \
$$ME/example2d/Makefile.in \
$$ME/example2d/README \
$$ME/example3d/*.cpp \
$$ME/example3d/Makefile.in \
$$ME/example3d/README \
$$ME/example2d/mrun \
$$ME/example3d/mrun \
$$ME/cFluid/*.cpp \
$$ME/cFluid/*.h \
$$ME/cFluid/Makefile.in \
$$ME/cFluid/input-*/in-* \
$$ME/cFluid/mrun* \
$$ME/src/intfc/*.c \
$$ME/src/intfc/*.h  \
$$ME/src/intfc/*.cu \
$$ME/src/intfc/*.cuh  \
$$ME/src/intfc/Makefile.in \
$$ME/src/util/*.h \
$$ME/src/util/*.c \
$$ME/src/util/Makefile.in \
$$ME/src/front/*.c \
$$ME/src/front/*.h \
$$ME/src/front/*.cu \
$$ME/src/front/*.cuh \
$$ME/src/front/Makefile.in \
$$ME/src/front/README \

base-tar:
	cd ./ && ME=`basename $$PWD` && cd .. && tar -cf "`date +FronTier++-base.%m_%d_%y.tar`" ${BASETARFLIST} && \
	gzip "`date +FronTier++-base.%m_%d_%y.tar`" && mv `date +FronTier++-base.%m_%d_%y.tar`.gz $$ME/.
