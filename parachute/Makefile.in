CC=@CXX@
CXX=@CXX@
F77=@F77@
F77_LIBS=@F77_LIBS@

libext = @libext@
incs =  @ftlibincs@
libincs = @otherlibsinc@
libs = @otherlibs@
build_cpu = @build_cpu@
incsloc = -I. -I../iFluid -I../airfoil -I../solver -I../include -I../Collision 

PETSC = yes
PETSC_ARCH=@PETSC_ARCH@
PETSC_DIR=@PETSC_DIR@

BOOST_INCLUDE=@BOOST_INCLUDE@
CGAL_INCLUDE=-I@CGAL_INCLUDE@ $(if $(BOOST_INCLUDE),-I$(BOOST_INCLUDE),) 
CGAL_LIB=-L@CGAL_LIB@

Petsc_Include=@PETSC_INCLUDE@ 
Petsc_Lib=@PETSC_LIB@ 

USEGPU = @USEGPU@
CUDA_DIR = /opt/cuda

parachute : @devel@ ../lib/libiF.a

iFbasic.o  : ../iFluid/iFluid.h ../iFluid/iFbasic.cpp
	${CXX} -c ../iFluid/iFbasic.cpp $(incsloc) $(incs) ${Petsc_Include}
iFcartsn2d.o : ../iFluid/iFluid.h ../solver/solver.h ../iFluid/iFcartsn2d.cpp
	${CXX} -c ../iFluid/iFcartsn2d.cpp $(incsloc) $(incs) ${Petsc_Include}
iFcartsn3d.o : ../iFluid/iFluid.h ../solver/solver.h ../iFluid/iFcartsn3d.cpp
	${CXX} -c ../iFluid/iFcartsn3d.cpp $(incsloc) $(incs) ${Petsc_Include}
hyperb.o : ../iFluid/iFluid.h ../solver/solver.h ../solver/hyperb.cpp
	${CXX} -c ../solver/hyperb.cpp $(incsloc) $(incs) ${Petsc_Include}
parab.o : ../iFluid/iFluid.h ../solver/solver.h ../solver/parab.cpp
	${CXX} -c ../solver/parab.cpp $(incsloc) $(incs) ${Petsc_Include}
solver.o : ../solver/solver.h ../solver/solver.cpp
	${CXX} -c ../solver/solver.cpp $(incsloc) $(incs) ${Petsc_Include}
ellip.o : ../solver/solver.h ../solver/ellip.cpp
	${CXX} -c ../solver/ellip.cpp $(incsloc) $(incs) ${Petsc_Include}
cim_ellip.o : ../solver/solver.h ../solver/cim_ellip.cpp
	${CXX} -c ../solver/cim_ellip.cpp $(incsloc) $(incs) ${Petsc_Include}
dual_ellip.o : ../solver/solver.h ../solver/dual_ellip.cpp
	${CXX} -c ../solver/dual_ellip.cpp $(incsloc) $(incs) ${Petsc_Include}
iFsub.o : ../iFluid/iFluid.h ../iFluid/iFsub.cpp
	${CXX} -c ../iFluid/iFsub.cpp $(incsloc) $(incs) ${Petsc_Include}
dcollid.o : ../Collision/collid.h ../Collision/dcollid.cpp
	${CXX} -c ../Collision/dcollid.cpp -frounding-math $(incsloc) $(incs) ${Petsc_Include} $(CGAL_INCLUDE)
dcollid3d.o : ../Collision/collid.h ../Collision/dcollid3d.cpp
	${CXX} -c ../Collision/dcollid3d.cpp -frounding-math $(incsloc) $(incs) ${Petsc_Include} $(CGAL_INCLUDE)
afprop.o : ../airfoil/airfoil.h ../iFluid/iFluid.h ../airfoil/afprop.cpp
	${CXX} -c ../airfoil/afprop.cpp $(incsloc) $(incs) ${Petsc_Include}
afdata.o : ../airfoil/airfoil.h ../iFluid/iFluid.h ../airfoil/afdata.cpp
	${CXX} -c ../airfoil/afdata.cpp $(incsloc) $(incs) ${Petsc_Include}
afvelo.o : ../airfoil/airfoil.h ../iFluid/iFluid.h ../airfoil/afvelo.cpp
	${CXX} -c ../airfoil/afvelo.cpp $(incsloc) $(incs) ${Petsc_Include}
aftest.o : ../airfoil/airfoil.h ../iFluid/iFluid.h ../airfoil/aftest.cpp
	${CXX} -c ../airfoil/aftest.cpp $(incsloc) $(incs) ${Petsc_Include}
afsetd.o : ../airfoil/airfoil.h ../iFluid/iFluid.h ../airfoil/afsetd.cpp
	${CXX} -c ../airfoil/afsetd.cpp $(incsloc) $(incs) ${Petsc_Include}
afcnpy.o : ../airfoil/airfoil.h ../iFluid/iFluid.h ../airfoil/afcnpy.cpp
	${CXX} -c ../airfoil/afcnpy.cpp $(incsloc) $(incs) ${Petsc_Include}
afinit3d.o : ../airfoil/airfoil.h ../iFluid/iFluid.h ../airfoil/afinit3d.cpp
	${CXX} -c ../airfoil/afinit3d.cpp $(incsloc) $(incs) ${Petsc_Include}
parachute.o : ../airfoil/airfoil.h ../iFluid/iFluid.h parachute.cpp
	${CXX} -c parachute.cpp $(incsloc) $(incs) ${Petsc_Include}
modules.o : ../airfoil/airfoil.h ../iFluid/iFluid.h modules.cpp
	${CXX} -c modules.cpp $(incsloc) $(incs) ${Petsc_Include}
airfoil_gpu.o: ../airfoil/airfoil_gpu.cu ../airfoil/airfoil_gpu.cuh
	nvcc -arch sm_20 -c -I. -I../include ../airfoil/airfoil_gpu.cu
cgal.o : ../airfoil/airfoil.h ../iFluid/iFluid.h ../airfoil/cgal.cpp
	${CXX} -c ../airfoil/cgal.cpp -frounding-math $(CGAL_INCLUDE) $(CGAL_LIB) -lCGAL_Core -lCGAL_ImageIO -lCGAL -L/usr/lib64 -lgmp -lmpfr $(incsloc) $(incs) ${Petsc_Include} 

ifeq ($(USEGPU),no)
parachute: ../iFluid/iFluid.h ../solver/solver.h ../airfoil/airfoil.h ../Collision/collid.h dcollid.o dcollid3d.o parachute.cpp afdata.o afprop.o afvelo.o aftest.o afsetd.o afcnpy.o afinit3d.o modules.o iFsub.o cgal.o ../lib/libiF.a
	${CXX} -c parachute.cpp $(incsloc) $(incs) ${Petsc_Include}
	$(CXX) -o parachute dcollid.o dcollid3d.o parachute.o afdata.o afprop.o afvelo.o aftest.o afsetd.o afcnpy.o afinit3d.o modules.o iFsub.o cgal.o -I../include -L../lib/${build_cpu} -liF ${Petsc_Lib} -L../lib/${build_cpu} -lFronTier $(libincs)  $(libs) ${F77_LIBS} -frounding-math $(CGAL_INCLUDE) $(CGAL_LIB) -lCGAL_Core -lCGAL_ImageIO -lCGAL -L/usr/lib64 -lgmp -lmpfr 
else
parachute: ../iFluid/iFluid.h ../solver/solver.h ../airfoil/airfoil.h ../Collision/collid.h parachute.cpp afdata.o afprop.o afvelo.o aftest.o afsetd.o afcnpy.o afinit3d.o modules.o iFsub.o ../lib/libiF.a airfoil_gpu.o cgal.o
	${CXX} -c parachute.cpp $(incsloc) $(incs) ${Petsc_Include}
	$(CXX) -o parachute parachute.o afdata.o afprop.o afvelo.o aftest.o afsetd.o afcnpy.o afinit3d.o modules.o iFsub.o airfoil_gpu.o cgal.o -I../include -L../lib/${build_cpu} -liF ${Petsc_Lib} -L../lib/${build_cpu} -lFronTier $(libincs)  $(libs) ${F77_LIBS} -L${CUDA_DIR}/lib64 -lcudart -frounding-math $(CGAL_INCLUDE) $(CGAL_LIB) -lCGAL_Core -lCGAL_ImageIO -lCGAL -L/usr/lib64 -lgmp -lmpfr
endif


../lib/libiF.a: solver.o cim_ellip.o dual_ellip.o ellip.o hyperb.o parab.o iFbasic.o iFcartsn2d.o iFcartsn3d.o
	$(AR) cru libiF.a $^
	ranlib libiF.a; mv libiF.a ../lib/$(build_cpu)/libiF.a

-include ../devel-deps.inc

clean:
	rm -rf *.o parachute 
output :
	rm -rf out/*

gif :
	hdf2gif out/intfc.hdf out/intfc.gif

TagsFile:
	ctags *.cpp ../Collision/*.h ../Collision/*.cpp ../airfoil/*.h ../airfoil/*.cpp ../iFluid/*.h ../iFluid/*.cpp ../solver/solver.h ../solver/*.cpp ../src/front/*.[ch] ../src/intfc/*.[ch] ../src/util/*.[ch]

tagsfile:
	ctags *.cpp ../Collision/*.h ../Collision/*.cpp ../airfoil/*.h ../airfoil/*.cpp ../iFluid/*.h ../iFluid/*.cpp ../solver/solver.h ../solver/*.cpp ../src/front/*.[ch] ../src/intfc/*.[ch] ../src/util/*.[ch]

etagsfile:
	etags *.cpp ../Collision/*.h ../Collision/*.cpp ../airfoil/*.h ../airfoil/*.cpp ../iFluid/*.h ../iFluid/*.cpp ../solver/solver.h ../solver/*.cpp ../src/front/*.[ch] ../src/intfc/*.[ch] ../src/util/*.[ch]
